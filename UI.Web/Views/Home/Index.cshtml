@{
    ViewBag.Title = "Ohm Resistor Calculator - Hire Erick Now";
}

<div class="row">

    <p>
        <h2>4 Strip Resistor</h2>
    </p>

    <div id="Resistor">

    </div>

    <div id="colorpicker" style="visibility:hidden;">

        <svg id="colorband" width="600" height="50" style="margin-left:80px;border:1px solid black;">
        </svg>

    </div>

</div>


<div style="margin-top:50px;">

    <table style="border-collapse:collapse;" cellpadding="4">
        <tr>
            <td>Resistance</td>
            <td><span id="resistance"></span></td>
            <td>ohms</td>
        </tr>
        <tr>
            <td>Tolerance</td>
            <td><span id="tolerance"></span></td>
            <td></td>
        </tr>
        <tr>
            <td>Minimum Resistance</td>
            <td><span id="minresistance"></span></td>
            <td>ohms</td>
        </tr>
        <tr>
            <td>Maximum Resistance</td>
            <td><span id="maxresistance"></span></td>
            <td>ohms</td>
        </tr>

    </table>
</div>



@section Scripts{

    <script>


    var svgns = "http://www.w3.org/2000/svg";



    var api = {

        colorpick: {},
        calculator: {},
        data: {},
        initialize: {},
        helper: {},
        resistor: {},
        state: {}

    }



    // -------------------------------------------------------------------
    //
    //  Data Setup Section
    //
    // -------------------------------------------------------------------


        api.bandColors =
        {
            banda: ["Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "White"],
            bandb: ["Black", "Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "White"],
            bandc: ["Black", "Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "White"],
            multiplier: ["Black", "Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "White", "Gold", "Silver"],
            tolerance: ["Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "Gold", "Silver"]
        };


    api.currentState = ["Red", "Blue", "Red", "Gold"];

    api.data.PREFIXES = [ "", "k", "M", "G" ];



    // -------------------------------------------------------------------
    //
    //  End Data Setup Section
    //
    // -------------------------------------------------------------------






    // -------------------------------------------------------------------
    //
    //  Colorpick Section
    //
    // -------------------------------------------------------------------



    // Shows the color picker when a resistor color band is clicked
    // The parameter "bandid" is the ID of the color band that was clicked.
    // -------------------------------------------------------------------

    api.colorpick.Show = function (bandid) {


        var colors = [];

        // This section is for 4 strip resistors
        if (api.currentState.length == 4) {

            if (bandid == "band1") colors = api.bandColors.banda; // Use the color options available for the first band.
            if (bandid == "band2") colors = api.bandColors.bandb; // Use the color options available for the second band.
            if (bandid == "band3") colors = api.bandColors.multiplier; // Use the color options available for the multiplier band.
            if (bandid == "band4") colors = api.bandColors.tolerance; // Use the color options available for the tolerance band.

        }

        // This section is for 5 strip resistors... which is not designed for this project... just wanted to acknowledge this could
        // easily be expanded to handle the additional resistor types.... although I would probably refactor this further to make
        // this more flexible.

        if (api.currentState.length == 5) {

            if (bandid == "band1") colors = api.bandColors.banda;
            if (bandid == "band2") colors = api.bandColors.bandb;
            if (bandid == "band3") colors = api.bandColors.bandc;
            if (bandid == "band4") colors = api.bandColors.multiplier;
            if (bandid == "band5") colors = api.bandColors.tolerance;

        }



        // Get the SVG container
        var svg = document.getElementById("colorband");


        // Create each color band with default settings and assigned click events
        for (var i = 0; i < colors.length; i++) {

            var rect = document.createElementNS(svgns, "rect");
            rect.setAttribute("fill", colors[i]);
            rect.setAttribute("width", "50px");
            rect.setAttribute("height", "50px");
            rect.setAttribute("cursor", "pointer");
            rect.setAttribute("data-colorindex", i);
            rect.setAttribute("data-bandid", bandid);
            rect.setAttribute("data-currentStateIndex", bandid);
            rect.setAttribute("x", i * 50);
            rect.setAttribute("y", 0);
            rect.style.opacity = 1.0



            // Assign the color band a click event to capture the selected color from the color panel
            // and to assign the color to the band, re-compute the computed values and display results
            rect.onclick = function () {

                var selectedColorid = this.getAttribute("data-colorindex");
                var bandid = this.getAttribute("data-bandid");

                var colorband = document.getElementsByTagNameNS(svgns, bandid);

                // Update the current color band state with the new color in the correct index.
                api.currentState[Number(bandid.replace("band", "")) - 1] = colors[selectedColorid];


                // Get the selected band
                var selectedBand = document.getElementById(bandid);

                // Assign the selected color to the selected band.
                selectedBand.setAttributeNS(null, "fill", colors[selectedColorid]);

                // Hide the color panel from view.
                $("#colorpicker").css("visibility", "hidden");


                // Calculate new computations based on new colors.
                api.calculator.compute();


            };


            svg.appendChild(rect);

        }

        svg.setAttribute("width", 50 * colors.length);
        $("#colorpicker").css("visibility", "visible");




    }


    // -------------------------------------------------------------------
    //
    //  End Colorpick Section
    //
    // -------------------------------------------------------------------





    // -------------------------------------------------------------------
    //
    //  Calculator Section
    //
    // -------------------------------------------------------------------



    // This function calls the server to perform call calculations and displays 
    // those results and performing appropriate unit conversions.

    api.calculator.compute = function () {


           // Use ajax to call the server api that performs computations.
           $.ajax({
                url: '@Url.Action("CalculateOhms", "Home")' ,
                type: 'POST',
                data: JSON.stringify(api.currentState),
                datatype: "json",
                contentType: "application/json; charset=utf-8",

                beforeSend: function () {

                },

                error: function (xhr, ajaxOptions, thrownError) {

                    // Display error messages... definitely want to refactor here.
                    // Would want to log these errors to a web service.
                    alert(xhr.status);
                    alert(thrownError);
                    alert(xhr.responseText);
                },

                complete: function () {

                },
                success: function (db) {

                    // Format the results to correct unit measures
                    // ------------------------------------------------------------------

                    var resistance = api.calculator.unitConversion(db.Resistance);
                    var tolerance = db.Tolerance;
                    var maxresistance = api.calculator.unitConversion(db.MaxResistance);
                    var minresistance = api.calculator.unitConversion(db.MinResistance);

                    // ------------------------------------------------------------------

                    // Display results
                    // ------------------------------------
                    //
                    $("#resistance").html(resistance);
                    $("#tolerance").html("<span style='text-orientation:upright'>&plusmn;</span> &nbsp;" + tolerance + "%");
                    $("#maxresistance").html(maxresistance);
                    $("#minresistance").html(minresistance);


                    // ------------------------------------

                }
            });

    }



        api.calculator.unitConversion = function (resistance) {

                var i = resistance;
                var index = 0;

                while (i >= 1000) {
                    i /= 1000;
                    ++index;
                }

                return i + " " + api.data.PREFIXES[index] + "Ω";
        }


    // -------------------------------------------------------------------
    //
    //  End Calculator Section
    //
    // -------------------------------------------------------------------




        api.initialize = function () {


            // Get calculations from the server based on default colors
            // --------------------------------------------------------------

            api.calculator.compute();

            // --------------------------------------------------------------


            // Draw resister based on default set of colors
            // --------------------------------------------------------------

            api.resistor.drawResistor();

            // --------------------------------------------------------------


        }






    // -------------------------------------------------------------------
    //
    //  Resistor Drawing Section
    //
    // -------------------------------------------------------------------



        api.resistor.drawResistor = function () {

            // Create the svg panel
            // --------------------------------------------------------------

            var svg = api.helper.getNode("svg", { id: "newresistor", width: "100%", height: "180" });
            document.getElementById("Resistor").appendChild(svg);

            // --------------------------------------------------------------


            // Create the main resistor
            // --------------------------------------------------------------

            var rect = api.helper.getNode("rect", { id: "main", width: 450, height: 150, x: 150, y: 20, rx: 20, ry: 20, fill: "#d6d6d6", stroke: "black", "stroke-width":5 });

            svg.appendChild(rect);


            // Create resistor left wire
            // --------------------------------------------------------------

            var rect = api.helper.getNode("rect", { id: "leftwire", width: 147, height: 20, x: 603, y: 80, rx: 0, ry: 4, fill: "#d6d6d6" });

            svg.appendChild(rect);


            // Create resistor right wire
            // --------------------------------------------------------------

            var rect = api.helper.getNode("rect", { id: "rightwire", width: 147, height: 20, x: 0, y: 80, rx: 0, ry: 4, fill: "#d6d6d6" });

            svg.appendChild(rect);


            // Draw the significant digit color bars and assign click events to each
            // ------------------------------------------------------------------------
            
            api.resistor.drawColorBands(svg);

            // -----------------------------------------------------------------


        }



        // This function will draw the color bands on the resistor
        // ---------------------------------------------------------------------

        api.resistor.drawColorBands = function (svg) {



            for (var i = 0; i < api.currentState.length; i++) {

                var padding = 50;

                if (i == api.currentState.length - 1) {
                    padding = 80;
                }

                var rect = api.helper.getNode("rect", { id: "band" + (i + 1), width: 30, height: 144, x: 200 + (i * padding), y: 23, fill: api.currentState[i], cursor: "pointer", stroke: "black", "stroke-width": 1 });

                // Add click event handler for each significant color bar
                rect.onclick = function () {

                    api.colorpick.Show(this.id);

                }

                svg.appendChild(rect);


            }

        }


    // -------------------------------------------------------------------
    //
    //  End Resistor Drawing Section
    //
    // -------------------------------------------------------------------




    // -------------------------------------------------------------------
    //
    //  Helper Functions Section
    //
    // -------------------------------------------------------------------


        api.helper.getNode = function (n, v) {
            n = document.createElementNS(svgns, n);
            for (var p in v)
                n.setAttributeNS(null, p, v[p]);
            return n;
        };


    // -------------------------------------------------------------------
    //
    //  End Helper Functions Section
    //
    // -------------------------------------------------------------------





    // -------------------------------------------------------------------
    //
    //  Launch Web Application
    //
    // -------------------------------------------------------------------


        api.initialize();


    // -------------------------------------------------------------------


    </script>

}
