@{
    ViewBag.Title = "Ohm Resistor Calculator - Hire Erick Now";
}

<div class="row">

    <p>
        <h2>4 Strip Resistor</h2>
    </p>
    <svg id="resistor" width="100%" height="180">
        <rect id="main" x="150" y="20" rx="20" ry="20" width="450" height="150" style="fill:#d6d6d6;stroke:black;stroke-width:5;opacity:1.0"></rect>
        <rect id="l1" x="0" y="80" rx="0" ry="5" width="150" height="20" style="fill:#d6d6d6;opacity:1.0"></rect>
        <rect id="l2" x="600" y="80" rx="0" ry="5" width="150" height="20" style="fill:#d6d6d6;opacity:1.0"></rect>
        <rect id="banda" class="bands" x="200" y="23" rx="0" ry="0" width="30" height="144" style="fill:black;stroke:black;stroke-width:1;opacity: 1.0;cursor:pointer;"></rect>
        <rect id="bandb" class="bands" x="260" y="23" rx="0" ry="0" width="30" height="144" style="fill:black;stroke:black;stroke-width:1;opacity: 1.0;cursor:pointer;"></rect>
        <rect id="bandc" class="bands" x="320" y="23" rx="0" ry="0" width="30" height="144" style="fill:black;stroke:black;stroke-width:1;opacity: 1.0;cursor:pointer;"></rect>
        <rect id="bandd" class="bands" x="500" y="23" rx="0" ry="0" width="30" height="144" style="fill:gold;stroke:black;stroke-width:1;opacity: 1.0;cursor:pointer;"></rect>
    </svg>

    <div id="colorpicker" style="visibility:hidden;">

        <svg id="colorband" width="600" height="50" style="margin-left:80px;border:1px solid black;">
        </svg>

    </div>

</div>

<div id="test">

</div>

<div style="margin-top:50px;">

    <table style="border-collapse:collapse;" cellpadding="4">
        <tr>
            <td>Resistance</td>
            <td><span id="resistance"></span></td>
            <td>ohms</td>
        </tr>
        <tr>
            <td>Tolerance</td>
            <td><span id="tolerance"></span></td>
            <td></td>
        </tr>
        <tr>
            <td>Minimum Resistance</td>
            <td><span id="minresistance"></span></td>
            <td>ohms</td>
        </tr>
        <tr>
            <td>Maximum Resistance</td>
            <td><span id="maxresistance"></span></td>
            <td>ohms</td>
        </tr>

    </table>
</div>



@section Scripts{

    <script>


    var svgns = "http://www.w3.org/2000/svg";



    var api = {

        colorpick: {},
        calculator: {},
        data: {},
        initialize: {},
        helper: {},
        resistor: {},
        state: {}

    }



    // -------------------------------------------------------------------
    //
    //  Data Setup Section
    //
    // -------------------------------------------------------------------

        api.defaultBandCount = 5;

    api.data.defaultBandCount = 4;
    api.data.bandacolor = "";
    api.data.bandbcolor = "";
    api.data.bandccolor = "";
    api.data.banddcolor = "";

    api.data.PREFIXES = [ "", "k", "M", "G" ];

        api.data.bandColors =
            { banda : ["Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "White"] ,
              bandb: ["Black", "Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "White"] ,
              multiplier: [{ color: "White", value : 9 },
                  { color: "Black", value : 0 },
                  { color: "Brown", value : 1 },
                  { color: "Red", value : 2 },
                  { color: "Orange", value : 3 },
                  { color: "Yellow", value : 4 },
                  { color: "Green", value : 5 },
                  { color: "Blue", value : 6 },
                  { color: "Violet", value : 7 },
                  { color: "Gray", value : 8 },
                  { color: "White", value : 9 },
                  { color: "Gold", value : -1 },
                  { color: "Silver", value : -2 }],
              tolerance: [{ color: "Gold", value: 5 },
                    { color: "Brown", value: 1 },
                    { color: "Red", value: 2 },
                    { color: "Green", value: 0.5 },
                    { color: "Blue", value: 0.25 },
                    { color: "Violet", value: 0.1 },
                    { color: "Gray", value: 0.05 },
                    { color: "Gold", value: 5 },
                    { color: "Silver", value: 10 }]
            };



    api.data.bandaColors = ["Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "White"];
    api.data.bandbColors = ["Black", "Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "White"];
    api.data.multiplier = ["Black", "Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "White", "Gold", "Silver"];
    api.data.tolerance = ["Brown", "Red", "Orange", "Yellow", "Green", "Blue", "Violet", "Gray", "White", "Gold", "Silver"];
    api.data.defaultBandColors = ["Orange", "Black", "Red", "Gold"];

    api.data.bandOptions = [
        { value: 0, tolerance: 0, multiplier: 1, color: "black", label: "Black" },
        { value: 1, tolerance: 1, multiplier: 10, color: "brown", label: "Brown" },
        { value: 2, tolerance: 2, multiplier: 100, color: "red", label: "Red" },
        { value: 3, multiplier: 1000, color: "orange", label: "Orange" },
        { value: 4, multiplier: 10000, color: "yellow", label: "Yellow" },
        { value: 5, tolerance: 0.5, multiplier: 100000, color: "green", label: "Green" },
        { value: 6, tolerance: 0.25, multiplier: 1000000, color: "blue", label: "Blue" },
        { value: 7, tolerance: 0.10, multiplier: 10000000, color: "violet", label: "Violet" },
        { value: 8, tolerance: 0.05, color: "grey", label: "Grey" },
        { value: 9, color: "white", label: "White" },
        { value: 10, tolerance: 5, multiplier: 0.1, color: "#FFD700", label: "Gold" },
        { value: 11, tolerance: 10, multiplier: 0.01, color: "#C0C0C0", label: "Silver" },
    ];


    // -------------------------------------------------------------------
    //
    //  End Data Setup Section
    //
    // -------------------------------------------------------------------


        api.state = {
            type: "",
            bands: [],
            resistance: 0,
            tolerance: 0
        };




    // -------------------------------------------------------------------
    //
    //  Colorpick Section
    //
    // -------------------------------------------------------------------



    api.colorpick.Show = function (bandid) {


        var colors = [ "Black","Brown","Red","Orange","Yellow","Green","Blue","Violet","Gray","White","Gold","Silver"];


        var count = colors.length;

        var svg = document.getElementById("colorband");




        for (var i = 0; i < count; i++) {

            var rect = document.createElementNS(svgns, "rect");
            rect.setAttribute("fill", colors[i]);
            rect.setAttribute("width", "50px");
            rect.setAttribute("height", "50px");
            rect.setAttribute("cursor", "pointer");
            rect.setAttribute("data-colorindex", i);
            rect.setAttribute("data-bandid", bandid);
            rect.setAttribute("x", i * 50);
            rect.setAttribute("y", 0);
            rect.style.opacity = 1.0


            rect.onclick = function () {

                var colorid = this.getAttribute("data-colorindex");
                var bandid = this.getAttribute("data-bandid");

                var colorband = document.getElementsByTagNameNS(svgns, bandid);

                // debugger;

                if (bandid == "banda") api.data.bandacolor = colors[colorid];
                if (bandid == "bandb") api.data.bandbcolor = colors[colorid];
                if (bandid == "bandc") api.data.bandccolor = colors[colorid];
                if (bandid == "bandd") api.data.banddcolor = colors[colorid];


                //for (var i = 0; i < bandC; i++) {

                //}

                $("#" + bandid).css("fill", colors[colorid]);

                $("#colorpicker").css("visibility", "hidden");

                if (api.data.bandacolor != "" &&
                    api.data.bandbcolor != "" &&
                    api.data.bandccolor != "" &&
                    api.data.banddcolor != "") api.calculator.compute();

            };


            svg.appendChild(rect);

        }

        svg.setAttribute("width", 50 * count);
        $("#colorpicker").css("visibility", "visible");




    }


    // -------------------------------------------------------------------
    //
    //  End Colorpick Section
    //
    // -------------------------------------------------------------------





    // -------------------------------------------------------------------
    //
    //  Calculator Section
    //
    // -------------------------------------------------------------------



    api.calculator.compute = function () {

        var data = {
            "banda": api.data.bandacolor,
            "bandb": api.data.bandbcolor,
            "bandc": api.data.bandccolor,
            "bandd": api.data.banddcolor
        }


           $.ajax({
                url: '@Url.Action("CalculateOhms", "Home")' ,
                type: 'POST',
                data: JSON.stringify(data),
                datatype: "json",
                contentType: "application/json; charset=utf-8",

                beforeSend: function () {

                },

                error: function (xhr, ajaxOptions, thrownError) {
                    debugger;
                    alert(xhr.status);
                    alert(thrownError);
                    alert(xhr.responseText);
                },

                complete: function () {

                },
                success: function (db) {

                    var resistance = api.calculator.formatResult(db.Resistance);
                    var tolerance = db.Tolerance;
                    var maxresistance = api.calculator.formatResult(db.MaxResistance);
                    var minresistance = api.calculator.formatResult(db.MinResistance);


                    // Display results
                    // ------------------------------------
                    //
                    $("#resistance").html(resistance);
                    $("#tolerance").html("<span style='text-orientation:upright'>&plusmn;</span> &nbsp;" + tolerance + "%");
                    $("#maxresistance").html(maxresistance);
                    $("#minresistance").html(minresistance);


                    // ------------------------------------

                }
            });

    }



        api.calculator.formatResult = function (resistance) {

                var i = resistance;
                var index = 0;

                while (i >= 1000) {
                    i /= 1000;
                    ++index;
                }

                return i + " " + api.data.PREFIXES[index] + "Ω";
        }


    // -------------------------------------------------------------------
    //
    //  End Calculator Section
    //
    // -------------------------------------------------------------------




        api.initialize = function () {


            // Set default band colors
            // --------------------------------------------------------------

            for (var i = 0; i < api.data.defaultBandColors.length; i++) {

                if (i == 0) {
                    api.data.bandacolor = api.data.defaultBandColors[i];

                    $("#banda").css("fill", api.data.defaultBandColors[i]);
                }
                if (i == 1) {
                    api.data.bandbcolor = api.data.defaultBandColors[i];
                    $("#bandb").css("fill", api.data.defaultBandColors[i]);
                }
                if (i == 2) {
                    api.data.bandccolor = api.data.defaultBandColors[i];
                    $("#bandc").css("fill", api.data.defaultBandColors[i]);
                }
                if (i == 3) {
                    api.data.banddcolor = api.data.defaultBandColors[i];
                    $("#bandd").css("fill", api.data.defaultBandColors[i]);
                }

            }

            api.calculator.compute();

            // --------------------------------------------------------------


            $(".bands").on("click", function () {

                api.colorpick.Show(this.id);

            });



            //api.resistor.drawColorBands();
            api.resistor.drawResistor();


        }






    // -------------------------------------------------------------------
    //
    //  Resistor Drawing Section
    //
    // -------------------------------------------------------------------


    //< svg id= "resistor" width= "100%" height= "180" >
    //    <rect id="main" x="150" y="20" rx="20" ry="20" width="450" height="150" style="fill:#d6d6d6;stroke:black;stroke-width:5;opacity:1.0"></rect>
    //    <rect id="l1" x="0" y="80" rx="0" ry="5" width="150" height="20" style="fill:#d6d6d6;opacity:1.0"></rect>
    //    <rect id="l2" x="600" y="80" rx="0" ry="5" width="150" height="20" style="fill:#d6d6d6;opacity:1.0"></rect>
    //    <rect id="banda" class="bands" x="200" y="23" rx="0" ry="0" width="30" height="144" style="fill:black;stroke:black;stroke-width:1;opacity: 1.0;cursor:pointer;"></rect>
    //    <rect id="bandb" class="bands" x="260" y="23" rx="0" ry="0" width="30" height="144" style="fill:black;stroke:black;stroke-width:1;opacity: 1.0;cursor:pointer;"></rect>
    //    <rect id="bandc" class="bands" x="320" y="23" rx="0" ry="0" width="30" height="144" style="fill:black;stroke:black;stroke-width:1;opacity: 1.0;cursor:pointer;"></rect>
    //    <rect id="bandd" class="bands" x="500" y="23" rx="0" ry="0" width="30" height="144" style="fill:gold;stroke:black;stroke-width:1;opacity: 1.0;cursor:pointer;"></rect>
    //</svg >


        //function getNode(n, v) {
        //    n = document.createElementNS("http://www.w3.org/2000/svg", n);
        //    for (var p in v)
        //        n.setAttributeNS(null, p, v[p]);
        //    return n;
        //}

        api.resistor.drawResistor = function () {

            // Create the svg panel
            // --------------------------------------------------------------
            var svgns = "http://www.w3.org/2000/svg";

            //var svg = getNode("svg", { id: "newresistor", width: "100%", height: "180" });
            var svg = api.helper.getNode("svg", { id: "newresistor", width: "100%", height: "180" });
            document.getElementById("test").appendChild(svg);

            // --------------------------------------------------------------


            // Create the main resistor
            // --------------------------------------------------------------

            var rect = api.helper.getNode("rect", { id: "main3", width: 450, height: 150, x: 150, y: 20, rx: 20, ry: 20, fill: "#d6d6d6", stroke: "black", "stroke-width":5 });

            svg.appendChild(rect);


            // Create resistor left wire
            // --------------------------------------------------------------

            var rect = api.helper.getNode("rect", { id: "l11", width: 147, height: 20, x: 603, y: 80, rx: 0, ry: 4, fill: "#d6d6d6" });

            svg.appendChild(rect);


            // Create resistor right wire
            // --------------------------------------------------------------

            var rect = api.helper.getNode("rect", { id: "l22", width: 147, height: 20, x: 0, y: 80, rx: 0, ry: 4, fill: "#d6d6d6" });

            svg.appendChild(rect);


            // Draw the significant digit color bars
            // -----------------------------------------------------------------

            api.resistor.drawColorBands(svg, api.defaultBandCount);
            //for (var i = 0; i < 3; i++) {

            //    var rect = api.helper.getNode("rect", { id: "banda"+(i+1), width: 30, height: 144, x: 200+(i*50), y: 23, fill: "purple", cursor: "pointer", stroke: "black", "stroke-width": 1 });

            //    // Add click event handler for each significant color bar
            //    rect.onclick = function () {

            //        //var colorid = this.getAttribute("data-colorindex");
            //        //var bandid = this.getAttribute("data-bandid");
            //        alert(this.getAttribute("id"));
            //    }

            //    svg.appendChild(rect);
            //}



            // -----------------------------------------------------------------




            // --------------------------------------------------------------

        }




        api.resistor.drawColorBands = function (svg, bandCount) {



            for (var i = 0; i < bandCount; i++) {

                var rect = api.helper.getNode("rect", { id: "band" + (i + 1), width: 30, height: 144, x: 200 + (i * 50), y: 23, fill: "purple", cursor: "pointer", stroke: "black", "stroke-width": 1 });

                // Add click event handler for each significant color bar
                rect.onclick = function () {
                    var x = Number(this.getAttribute("x"));
                    var y = Number(this.getAttribute("y"));
                    var width = Number(this.getAttribute("width"));
                    var height = Number(this.getAttribute("height"));
                    var cx = x + (width / 2);
                    var cy = y + (height / 2);
                    //debugger;
                    //this.setAttributeNS(null, "transform", "rotate(5)");


                    //var anim = document.createElementNS(svgns, "animateTransform");
                    //anim.setAttributeNS(null, "attributeName", "transform");
                    ////anim.setAttributeNS(null, "attributeType", "XML");
                    //anim.setAttributeNS(null, "type", "rotate");
                    //anim.setAttributeNS(null, "values", "0," + cx + "," + cy + ",360," + cx + "," + cy);
                    //anim.setAttributeNS(null, "begin", "0s");
                    //anim.setAttributeNS(null, "dur", "5s");
                    //anim.setAttributeNS(null, "repeatCount", "indefinite");


                    //var anim = document.createElementNS(svgns, "animate");
                    //anim.setAttributeNS(null, "attributeName", "opacity");
                    //anim.setAttributeNS(null, "to", 0);
                    //anim.setAttributeNS(null, "dur", 0.25);
                    //anim.setAttributeNS(null, "fill", "freeze");




                    //this.appendChild(anim);

                    //this.setAttributeNS(null, "fill", "red");
                    //var all = document.getElementById("test");
                    //all.setAttribute("opacity-fill", "0.2");
                    //all.style.opacity = 0.2;
                    //this.style.opacity = 1.0;



                    // Change the opacity of all the bands except the one selected
                    // -----------------------------------------------------------------

                    //for (var x = 1; x < bandCount + 1; x++) {
                    //    var currentBand = document.getElementById("band" + x);
                    //    if (currentBand.id != this.id) currentBand.style.opacity = 0.2;
                    //}

                    // -----------------------------------------------------------------



                    //var colorid = this.getAttribute("data-colorindex");
                    //var bandid = this.getAttribute("data-bandid");
                    //alert(this.getAttribute("id"));
                    api.colorpick.Show(this.id);

                }

                svg.appendChild(rect);



                //var rect = document.createElementNS(svgns, "rect");

                //rect.setAttributeNS(null, "x", (x * 50)+200);
                //rect.setAttributeNS(null, "y", 23);
                //rect.setAttributeNS(null, "height", "144");
                //rect.setAttributeNS(null, "width", "30");
                //rect.setAttributeNS(null, "fill", "purple");
                //rect.setAttributeNS(null, "cursor", "pointer");

                //document.getElementById("resistor").appendChild(rect);

            }

        }


    // -------------------------------------------------------------------
    //
    //  End Resistor Drawing Section
    //
    // -------------------------------------------------------------------




    // -------------------------------------------------------------------
    //
    //  Helper Functions Section
    //
    // -------------------------------------------------------------------


        api.helper.getNode = function (n, v) {
            n = document.createElementNS(svgns, n);
            for (var p in v)
                n.setAttributeNS(null, p, v[p]);
            return n;
        };


    // -------------------------------------------------------------------
    //
    //  End Helper Functions Section
    //
    // -------------------------------------------------------------------





    // -------------------------------------------------------------------
    //
    //  Launch Web Application
    //
    // -------------------------------------------------------------------


        api.initialize();


    // -------------------------------------------------------------------


    </script>

}
